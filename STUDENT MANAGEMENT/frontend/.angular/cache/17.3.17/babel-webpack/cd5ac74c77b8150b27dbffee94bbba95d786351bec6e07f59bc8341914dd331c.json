{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/students';\n  }\n  getAllStudents() {\n    return this.http.get(this.apiUrl);\n  }\n  getStudentById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createStudent(student) {\n    return this.http.post(this.apiUrl, student);\n  }\n  updateStudent(id, student) {\n    return this.http.put(`${this.apiUrl}/${id}`, student);\n  }\n  deleteStudent(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  searchStudents(term) {\n    return this.http.get(`${this.apiUrl}/search?term=${term}`);\n  }\n  getStudentsByCourse(course) {\n    return this.http.get(`${this.apiUrl}/course/${course}`);\n  }\n  static {\n    this.ɵfac = function StudentService_Factory(t) {\n      return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: StudentService,\n      factory: StudentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["StudentService","constructor","http","apiUrl","getAllStudents","get","getStudentById","id","createStudent","student","post","updateStudent","put","deleteStudent","delete","searchStudents","term","getStudentsByCourse","course","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ADMIN\\Desktop\\project\\frontend\\src\\app\\services\\student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Student } from '../models/student.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n  private apiUrl = 'http://localhost:8080/api/students';\n\n  constructor(private http: HttpClient) { }\n\n  getAllStudents(): Observable<Student[]> {\n    return this.http.get<Student[]>(this.apiUrl);\n  }\n\n  getStudentById(id: number): Observable<Student> {\n    return this.http.get<Student>(`${this.apiUrl}/${id}`);\n  }\n\n  createStudent(student: Student): Observable<Student> {\n    return this.http.post<Student>(this.apiUrl, student);\n  }\n\n  updateStudent(id: number, student: Student): Observable<Student> {\n    return this.http.put<Student>(`${this.apiUrl}/${id}`, student);\n  }\n\n  deleteStudent(id: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n\n  searchStudents(term: string): Observable<Student[]> {\n    return this.http.get<Student[]>(`${this.apiUrl}/search?term=${term}`);\n  }\n\n  getStudentsByCourse(course: string): Observable<Student[]> {\n    return this.http.get<Student[]>(`${this.apiUrl}/course/${course}`);\n  }\n}"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC;EAEb;EAExCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAC9C;EAEAG,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EAEAC,aAAaA,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,IAAI,CAACP,MAAM,EAAEM,OAAO,CAAC;EACtD;EAEAE,aAAaA,CAACJ,EAAU,EAAEE,OAAgB;IACxC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAU,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,OAAO,CAAC;EAChE;EAEAI,aAAaA,CAACN,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACjD;EAEAQ,cAAcA,CAACC,IAAY;IACzB,OAAO,IAAI,CAACd,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,gBAAgBa,IAAI,EAAE,CAAC;EACvE;EAEAC,mBAAmBA,CAACC,MAAc;IAChC,OAAO,IAAI,CAAChB,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,WAAWe,MAAM,EAAE,CAAC;EACpE;;;uBA/BWlB,cAAc,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdtB,cAAc;MAAAuB,OAAA,EAAdvB,cAAc,CAAAwB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}